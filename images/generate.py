# takes an indexed png and turns it into a data file

import argparse

import numpy as np
from PIL import Image

parser = argparse.ArgumentParser()
parser.add_argument("file", type=str, help="Name of file to convert (e.g. image.png)")
parser.add_argument("--threshold", type=int, help="Grayscale threshold/cutoff for black/white", default=128)
args = parser.parse_args()

assert args.file.endswith(".png")

out = args.file[:-4] + ".py"

im = Image.open(args.file).convert("L")

height = im.height
orig_width = im.width
width = (orig_width + 7) // 8 * 8
bits = list(np.array(im).reshape(-1) > args.threshold)
rows = [bits[orig_width * y : orig_width * (y + 1)] + [1] * (width - orig_width) for y in range(height)]

with open(out, "w") as f:
    print("# autogenerated by generate.py", file=f)
    print(file=f)
    print(f"width = {width}", file=f)
    print(f"height = {height}", file=f)
    print(file=f)
    print("# fmt: off", file=f)
    print("bits = [", file=f)
    for row in rows:
        print("    " + ",".join(str(1 - x) for x in row) + ",", file=f)
    print("]", file=f)
    print("# fmt: on", file=f)
